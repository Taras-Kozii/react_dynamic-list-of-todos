{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","status","onQueryChanged","onStatusChanged","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoModal","onClose","useState","user","setUser","useEffect","a","userFromServer","getUserFromServer","href","email","name","App","setTodos","setSelectedTodo","setStatus","setQuery","isLoaded","setIsLoaded","getReorderedTodos","todosFromServer","visibleTodos","filter","toLowerCase","includes","getTodosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2058e72.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={classNames('', {\n            'has-background-info-light': todo.id === selectedTodo?.id,\n          })}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': todo.completed === false,\n              'has-text-success': todo.completed === true,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames({\n                  'far fa-eye': todo.id !== selectedTodo?.id,\n                  'far fa-eye-slash': todo.id === selectedTodo?.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  status: string;\n  onQueryChanged: (value: string) => void;\n  onStatusChanged: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  status,\n  onQueryChanged,\n  onStatusChanged,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => onStatusChanged(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChanged(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => onQueryChanged('')}\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  onClose: (value: Todo | null) => void;\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ onClose, todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    async function getUserFromServer() {\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n    }\n\n    getUserFromServer();\n  }, [user]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  function getReorderedTodos(todosFromServer: Todo[]) {\n    let visibleTodos = [...todosFromServer];\n\n    visibleTodos = visibleTodos.filter((todo) => {\n      switch (status) {\n        case 'all':\n          return todo;\n\n        case 'completed':\n          return todo.completed === true;\n\n        case 'active':\n          return todo.completed === false;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (query) {\n      visibleTodos = visibleTodos.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    return visibleTodos;\n  }\n\n  useEffect(() => {\n    async function getTodosFromServer() {\n      const todosFromServer = await getTodos();\n\n      setTodos(getReorderedTodos(todosFromServer));\n      setIsLoaded(true);\n    }\n\n    getTodosFromServer();\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                onQueryChanged={setQuery}\n                onStatusChanged={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  onSelectedTodo={setSelectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}